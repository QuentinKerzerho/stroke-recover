// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Name {
    id     String  @id @default(cuid())
    name   String
    photos Photo[]
}

model Photo {
    id       String  @id @default(cuid())
    url      String?
    diapo    Diapo?  @relation(fields: [diapo_id], references: [id])
    diapo_id String?
    name     Name?   @relation(fields: [name_id], references: [id])
    name_id  String?
}

model Diapo {
    id         String  @id @default(cuid())
    created_at String?
    photos     Photo[]
}

// model Post {
//     id        String  @id @default(cuid())
//     title     String
//     content   String?
//     published Boolean @default(false)
//     author    User?   @relation(fields: [authorId], references: [id])
//     authorId  String?
// }

// model User {
//     id        String   @id @default(cuid())
//     name      String?
//     email     String?  @unique
//     createdAt DateTime @default(now()) @map(name: "created_at")
//     updatedAt DateTime @updatedAt @map(name: "updated_at")
//     posts     Post[]

//     @@map(name: "users")
// }
